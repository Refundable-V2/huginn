{
    "swagger": "2.0",
    "info": {
        "description": "This REST-API provides the backend of Refundable",
        "title": "Refundable",
        "contact": {
            "name": "Michael Beier - Entwickler",
            "url": "https://mbeier.at",
            "email": "admin@mbeier.at"
        },
        "license": {
            "name": "MIT Lizenz",
            "url": "https://github.com/refundable-tgm/huginn/blob/master/LICENSE"
        },
        "version": "1.1"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/createApplication": {
            "post": {
                "description": "Creates the provided application in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Creates a new application",
                "operationId": "create-application",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "The Application Data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Application"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Information"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/deleteApplication": {
            "delete": {
                "description": "Deletes an application identified by a uuid",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes an existing application",
                "operationId": "delete-application",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to delete",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Information"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getAbsenceFormForClasses": {
            "get": {
                "description": "Generates an absence form for classes and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates an absence form for classes",
                "operationId": "get-absence-form-for-classes",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the pdf from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Filter for classes",
                        "name": "classes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PDF"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getAbsenceFormForTeacher": {
            "get": {
                "description": "Generates an absence form for a teacher and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates an absence form for a teacher",
                "operationId": "get-absence-form-for-teacher",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the pdf from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UNTIS-abbrevation name of the teacher",
                        "name": "teacher",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PDF"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getActiveApplications": {
            "get": {
                "description": "Returns all active applications as a list of applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns all active applications",
                "operationId": "get-all-active-applications",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter to only show applications of this teacher",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Application"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getAllApplications": {
            "get": {
                "description": "Returns all applications as a list of applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns all applications",
                "operationId": "get-all-applications",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter to only show applications of this teacher",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Application"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getApplication": {
            "get": {
                "description": "Returns all applications currently needing a review by an admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns all admin applications",
                "operationId": "get-admin-applications",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/db.Application"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getBusinessTripApplicationExcel": {
            "get": {
                "description": "Generates a business trip application excel for a teacher and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates a business trip application excel for a teacher",
                "operationId": "get-business-trip-application-excel",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the excel from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short name of the teacher this should be generated for",
                        "name": "short",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Business Trip Application data",
                        "name": "bta_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Excel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getBusinessTripApplicationForm": {
            "get": {
                "description": "Generates a business trip application form for a teacher and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates a business trip application form for a teacher",
                "operationId": "get-business-trip-application-form",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the form from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short name of the teacher this should be generated for",
                        "name": "short",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Business Trip Application data",
                        "name": "bta_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PDF"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getCompensationForEducationalSupportForm": {
            "get": {
                "description": "Generates a compensation for educational support form for all teachers and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates a compensation for educational support form for all teachers",
                "operationId": "get-compensation-for-educational-support-form",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the pdf from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PDF"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getNews": {
            "get": {
                "description": "Returns the 10 last changed applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns the news",
                "operationId": "get-news",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/rest.News"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getTeacher": {
            "get": {
                "description": "Searches for the Teacher with the specified uuid and returns the data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a teacher with the specified UUID",
                "operationId": "get-teacher",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "UUID of Teacher",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Teacher"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getTeacherByShort": {
            "get": {
                "description": "Searches for the Teacher with the specified name and returns the data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a teacher with the specified short name",
                "operationId": "get-teacher-by-short",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short Name of Teacher",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Teacher"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getTravelInvoiceExcel": {
            "get": {
                "description": "Generates a travel invoice excel for a teacher and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates a travel invoice excel for a teacher",
                "operationId": "get-travel-invoice-excel",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the excel from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short name of the teacher this should be generated for",
                        "name": "short",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Travel Invoice data",
                        "name": "ti_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Excel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/getTravelInvoiceForm": {
            "get": {
                "description": "Generates a travel invoice form for a teacher and returns it",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generates a travel invoice for a teacher",
                "operationId": "get-travel-invoice-form",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the pdf from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short name of the teacher this should be generated for",
                        "name": "short",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the Travel Invoice data",
                        "name": "ti_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "If provided the pdf will include all receipt",
                        "name": "receipts",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.PDF"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login a user using username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login a user",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Account Information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.TokenPair"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Destroys the session of a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logs out a user",
                "operationId": "logout",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Information"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Creates a new token pair when a valid refresh token is provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Refreshes the token pair of a session",
                "operationId": "refresh",
                "parameters": [
                    {
                        "description": "Refresh Token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.RefreshToken"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rest.TokenPair"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/saveBillingReceipt": {
            "post": {
                "description": "Saves a billing receipt in the context of an application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Saves a billing receipt",
                "operationId": "save-billing-receipt",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to generate the excel from",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Short name of the teacher this should be generated for",
                        "name": "short",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Information"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/setTeacherPermissions": {
            "post": {
                "description": "Sets the permissions of a Teacher to update their access rights",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Sets the permissions of a Teacher",
                "operationId": "set-teacher-permissions",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Permission data of the teacher",
                        "name": "perm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.Permissions"
                        }
                    },
                    {
                        "type": "string",
                        "description": "UUID of the teacher whos permissions will be changed",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Teacher"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        },
        "/updateApplication": {
            "put": {
                "description": "Updates an application identified by a uuid with the data in the body in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Updates an existing application",
                "operationId": "update-application",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Access Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "The application data to update",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/db.Application"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Identifier of the application to update",
                        "name": "uuid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.Information"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "db.Application": {
            "type": "object",
            "properties": {
                "business_trip_applications": {
                    "description": "The regarding BusinessTripApplication for each teacher",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.BusinessTripApplication"
                    }
                },
                "destination_address": {
                    "description": "The Destination Address of this Application",
                    "type": "string",
                    "example": "Karl Hönck Heim, Kärnten"
                },
                "end_time": {
                    "description": "the time the underlying event of this Application ends",
                    "type": "string"
                },
                "kind": {
                    "description": "The kind of this Application (for more see the Enum for the kinds of Application on this level only Training, SchoolEvent and OtherReason is applicable, the sub kinds should be used in the further detail section of the corresponding site)",
                    "type": "integer",
                    "example": 0
                },
                "last_changed": {
                    "description": "The timestamp this application was changed last",
                    "type": "string"
                },
                "miscellaneous_reason": {
                    "description": "The Reasoning of this Application (there is none if this isn't of the type Miscellaneous)",
                    "type": "string",
                    "example": "Guter Grund"
                },
                "name": {
                    "description": "The name on how this Application should be referenced by",
                    "type": "string",
                    "example": "Sommersportwoche"
                },
                "notes": {
                    "description": "Other Notes regarding this Application",
                    "type": "string",
                    "example": "Wichtig ist, dass wir die Reise bewilligen lassen!"
                },
                "other_reason_details": {
                    "description": "Further Details if this is of the kind of any other, if not this will be empty",
                    "$ref": "#/definitions/db.OtherReasonDetails"
                },
                "progress": {
                    "description": "The Progress of this Application in filing (for more see the Enum for the Progress)",
                    "type": "integer",
                    "example": 3
                },
                "school_event_details": {
                    "description": "Further Details if this is of the kind SchoolEvent, if not this will be empty",
                    "$ref": "#/definitions/db.SchoolEventDetails"
                },
                "start_address": {
                    "description": "The starting address of this Application",
                    "type": "string",
                    "example": "TGM, Wexstraße 19-23, 1220 Wien"
                },
                "start_time": {
                    "description": "the time the underlying event of this Application starts",
                    "type": "string"
                },
                "training_details": {
                    "description": "Further Details if this is of the kind Training, if not this will be empty",
                    "$ref": "#/definitions/db.TrainingDetails"
                },
                "travel_invoices": {
                    "description": "The regarding TravelInvoice for each teacher",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.TravelInvoice"
                    }
                },
                "uuid": {
                    "description": "A generated uuid of this application",
                    "type": "string",
                    "example": "693aa616-9895-418b-8904-765f0f6d26a4"
                }
            }
        },
        "db.BusinessTripApplication": {
            "type": "object",
            "properties": {
                "bonus_mile_confirmation_1": {
                    "description": "the confirmation of the first bonus mile clause",
                    "type": "boolean",
                    "example": true
                },
                "bonus_mile_confirmation_2": {
                    "description": "the confirmation of the second bonus mile clause",
                    "type": "boolean",
                    "example": true
                },
                "business_card_emitted_outward": {
                    "description": "whether a business card was emitted outwards",
                    "type": "boolean",
                    "example": false
                },
                "business_card_emitted_return": {
                    "description": "whether a business card was emitted on the return",
                    "type": "boolean",
                    "example": false
                },
                "date_application_approved": {
                    "description": "the date this application is approved",
                    "type": "string"
                },
                "date_application_filed": {
                    "description": "the date this application is filed",
                    "type": "string"
                },
                "degree": {
                    "description": "Degree of the Teacher",
                    "type": "string",
                    "example": "DI"
                },
                "end_point": {
                    "description": "The end point (see the regarding Enum: OwnApartment or Office)",
                    "type": "integer",
                    "example": 1
                },
                "estimated_costs": {
                    "description": "the total estimated costs",
                    "type": "number",
                    "example": 25.32
                },
                "id": {
                    "description": "The id (counting upwards) of this BusinessTripApplication regarding to the uid",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Name of the Teacher",
                    "type": "string",
                    "example": "Stefan"
                },
                "other_costs": {
                    "description": "other costs which appeared",
                    "type": "number",
                    "example": 2.42
                },
                "other_participants": {
                    "description": "The name of other participants of this trip",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Markus Schabel",
                        " Gottfried Koppensteiner"
                    ]
                },
                "paid_by_whom": {
                    "description": "if some costs are paid by someone else by whom",
                    "type": "string",
                    "example": "Technologenverband"
                },
                "reasoning": {
                    "description": "The reasoing behind the trip application",
                    "type": "string",
                    "example": "Lehrausgang ins technische Museum"
                },
                "referee": {
                    "description": "the referee checking this application",
                    "type": "string"
                },
                "service_begin_time": {
                    "description": "The time the service begins",
                    "type": "string"
                },
                "service_end_time": {
                    "description": "The time the service ends",
                    "type": "string"
                },
                "staffnr": {
                    "description": "The staffnr of the regarding teacher",
                    "type": "integer",
                    "example": 938503154
                },
                "starting_point": {
                    "description": "The starting point (see the regarding Enum: OwnApartment or Office",
                    "type": "integer",
                    "example": 1
                },
                "staying_costs_paid_by_someone": {
                    "description": "whether the staying costs are paid by someone else",
                    "type": "boolean",
                    "example": true
                },
                "surname": {
                    "description": "Surname of the Teacher",
                    "type": "string",
                    "example": "Zakall"
                },
                "title": {
                    "description": "Title of the Teacher",
                    "type": "string"
                },
                "travel_costs_paid_by_someone": {
                    "description": "whether the travel costs are paid by someone else",
                    "type": "boolean",
                    "example": true
                },
                "travel_mode": {
                    "description": "The travel mode (see the regarding Enum for this)",
                    "type": "integer",
                    "example": 6
                },
                "travel_purpose": {
                    "description": "The purpose of travelling",
                    "type": "string",
                    "example": "Lehrausgang"
                },
                "trip_begin_time": {
                    "description": "The time the trip begins",
                    "type": "string"
                },
                "trip_end_time": {
                    "description": "The time the trip ends",
                    "type": "string"
                },
                "trip_goal": {
                    "description": "The trip goal (address)",
                    "type": "string",
                    "example": "Technisches Museum Wien"
                }
            }
        },
        "db.Calculation": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "the id of this calculation",
                    "type": "integer",
                    "example": 1
                },
                "rows": {
                    "description": "rows of this calculation",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Row"
                    }
                },
                "sum_additional_costs": {
                    "description": "the sum of all additional costs",
                    "type": "number"
                },
                "sum_daily_charges": {
                    "description": "the sum of all daily charges",
                    "type": "number"
                },
                "sum_nightly_charges": {
                    "description": "the sum of all nightly charges",
                    "type": "number"
                },
                "sum_of_sums": {
                    "description": "the sum of all sums",
                    "type": "number"
                },
                "sum_travel_costs": {
                    "description": "the sum of all travel costs",
                    "type": "number"
                }
            }
        },
        "db.OtherReasonDetails": {
            "type": "object",
            "properties": {
                "filer": {
                    "description": "the teacher this application belongs to",
                    "type": "string",
                    "example": "Stefan Zakall"
                },
                "kind": {
                    "description": "The kind of other Reason this Application is filed",
                    "type": "integer",
                    "example": 7
                },
                "miscellaneous_reason": {
                    "description": "the reasoning if the other reason is of kind Miscellaneous",
                    "type": "string",
                    "example": "Ein guter Grund"
                },
                "service_mandate_gz": {
                    "description": "the gz number if the other reason is a ServiceMandate",
                    "type": "integer"
                },
                "service_mandate_title": {
                    "description": "The title if the other reason is a ServiceMandate",
                    "type": "string",
                    "example": "Dienstverrichtung"
                }
            }
        },
        "db.Row": {
            "type": "object",
            "properties": {
                "additional_costs": {
                    "description": "the additionalCosts this Row conducts",
                    "type": "number",
                    "example": 4.32
                },
                "begin": {
                    "description": "the begin time this Row refers to",
                    "type": "string"
                },
                "daily_charges": {
                    "description": "the dailyCharges this Row conducts",
                    "type": "number",
                    "example": 4.32
                },
                "date": {
                    "description": "The date this Row refers to",
                    "type": "string"
                },
                "end": {
                    "description": "the end time this Row refers to",
                    "type": "string"
                },
                "kilometres": {
                    "description": "the amount of kilometres this row refers to",
                    "type": "number",
                    "example": 4.32
                },
                "kind_of_cost": {
                    "description": "the kind of costs this row describes (see costs enum)",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3
                    ]
                },
                "nightly_charges": {
                    "description": "the nightlyCharges this Row conducts",
                    "type": "number",
                    "example": 4.32
                },
                "nr": {
                    "description": "The row nr",
                    "type": "integer",
                    "example": 1
                },
                "sum": {
                    "description": "the sum of all costs in this Row",
                    "type": "number",
                    "example": 4.32
                },
                "travel_costs": {
                    "description": "the travelCosts this Row conducts",
                    "type": "number",
                    "example": 4.32
                }
            }
        },
        "db.SchoolEventDetails": {
            "type": "object",
            "properties": {
                "amount_female_students": {
                    "description": "The amount of female students",
                    "type": "integer",
                    "example": 0
                },
                "amount_male_students": {
                    "description": "The amount of male students",
                    "type": "integer",
                    "example": 17
                },
                "classes": {
                    "description": "The participating classes",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "5BHIT",
                        " 5AHIT",
                        " 5CHIT",
                        " 5DHIT"
                    ]
                },
                "duration_in_days": {
                    "description": "The duration of the event in days",
                    "type": "integer",
                    "example": 2
                },
                "teachers": {
                    "description": "Details of each teacher participating in the SchoolEvent",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.SchoolEventTeacherDetails"
                    }
                }
            }
        },
        "db.SchoolEventTeacherDetails": {
            "type": "object",
            "properties": {
                "attendance_from": {
                    "description": "The teacher will be attending the SchoolEvent from",
                    "type": "string"
                },
                "attendance_till": {
                    "description": "The teacher will be attend the SchoolEvent till",
                    "type": "string"
                },
                "group": {
                    "description": "The group number",
                    "type": "integer",
                    "example": 1
                },
                "meeting_point": {
                    "description": "Where the teacher will meet with the group to travel together",
                    "type": "string",
                    "example": "TGM, Wexstraße 19-23, 1220 Wien"
                },
                "name": {
                    "description": "The full name of a teacher",
                    "type": "string",
                    "example": "Stefan Zakall"
                },
                "role": {
                    "description": "The role of each teacher (Leader or Companion)",
                    "type": "integer",
                    "example": 0
                },
                "shortname": {
                    "description": "The short name (abbrevation) of a teacher",
                    "type": "string",
                    "example": "szakall"
                },
                "start_address": {
                    "description": "Where the teacher starts their travel from",
                    "type": "string",
                    "example": "TGM, Wexstraße 19-23, 1220 Wien"
                }
            }
        },
        "db.Teacher": {
            "type": "object",
            "properties": {
                "administration": {
                    "description": "whether this Teacher as administration rights",
                    "type": "boolean",
                    "example": true
                },
                "av": {
                    "description": "whether this Teacher as av rights",
                    "type": "boolean",
                    "example": true
                },
                "longname": {
                    "description": "the longname (firstname + sirname) of the Teacher",
                    "type": "string",
                    "example": "Stefan Zakall"
                },
                "pek": {
                    "description": "whether this Teacher as pek rights",
                    "type": "boolean",
                    "example": true
                },
                "short": {
                    "description": "the short name of the Teacher",
                    "type": "string",
                    "example": "szakall"
                },
                "super_user": {
                    "description": "Superuser (total admin) of this software",
                    "type": "boolean",
                    "example": true
                },
                "uuid": {
                    "description": "the uuid of this Teacher",
                    "type": "string",
                    "example": "3fcf7f67-e0ed-4339-99b4-a6765aaa3dc4"
                }
            }
        },
        "db.TrainingDetails": {
            "type": "object",
            "properties": {
                "kind": {
                    "description": "The kind of Training",
                    "type": "integer",
                    "example": 2
                },
                "miscellaneous_reason": {
                    "description": "if its miscellaneous a reasoning for the Training",
                    "type": "string",
                    "example": "Ein sonstiger Grund"
                },
                "organizer": {
                    "description": "The company who organizes the Training",
                    "type": "string",
                    "example": "Accenture"
                },
                "ph": {
                    "description": "the personnel number of the teacher",
                    "type": "integer",
                    "example": 938503154
                }
            }
        },
        "db.TravelInvoice": {
            "type": "object",
            "properties": {
                "approval_date": {
                    "description": "the date this application was approved",
                    "type": "string"
                },
                "breakfasts": {
                    "description": "the amount of breakfasts",
                    "type": "integer",
                    "example": 2
                },
                "calculation": {
                    "description": "the regarding calculation",
                    "$ref": "#/definitions/db.Calculation"
                },
                "clerk": {
                    "description": "the clerk maintaining and checking this application",
                    "type": "string"
                },
                "daily_charges_mode": {
                    "description": "the mode how daily charges are handled",
                    "type": "integer",
                    "example": 1
                },
                "degree": {
                    "description": "Degree of the Teacher",
                    "type": "string",
                    "example": "DI"
                },
                "dinners": {
                    "description": "the amount of dinners",
                    "type": "integer",
                    "example": 4
                },
                "end_point": {
                    "description": "the end point of the trip",
                    "type": "string",
                    "example": "Hauptbahnhof, 1220 Wien"
                },
                "filing_date": {
                    "description": "the date this application was filed",
                    "type": "string"
                },
                "id": {
                    "description": "The id (counting upwards) of this TravelInvoice regarding to the uid",
                    "type": "integer",
                    "example": 1
                },
                "kilometre_allowance": {
                    "description": "whether the teacher got a kilometre allowance",
                    "type": "boolean",
                    "example": true
                },
                "kilometre_amount": {
                    "description": "the regarding kilometre amount",
                    "type": "number",
                    "example": 25.12
                },
                "lunches": {
                    "description": "the amount of lunches",
                    "type": "integer",
                    "example": 3
                },
                "name": {
                    "description": "Name of the Teacher",
                    "type": "string",
                    "example": "Stefan"
                },
                "nightly_charges_mode": {
                    "description": "the mode how nightly charges are handled",
                    "type": "integer",
                    "example": 1
                },
                "no_travel_costs": {
                    "description": "whether there aren't any travel costs",
                    "type": "boolean",
                    "example": true
                },
                "nr_and_indications_of_participants": {
                    "description": "whether the participants of the trip are counted and clearly indicated",
                    "type": "boolean",
                    "example": true
                },
                "official_business_card_got": {
                    "description": "whether the teacher got a official business card",
                    "type": "boolean",
                    "example": true
                },
                "replacement_for_advantage_card": {
                    "description": "whether the teacher got a replacement for an advantage card",
                    "type": "boolean",
                    "example": false
                },
                "replacement_for_train_card_class_2": {
                    "description": "whether the teacher got a replacement for a train card class 2",
                    "type": "boolean",
                    "example": false
                },
                "reviewer": {
                    "description": "the reviewer reviewing the approval of this application",
                    "type": "string"
                },
                "shortened_amount": {
                    "description": "the amount the daily charges should be shortened",
                    "type": "number",
                    "example": 0
                },
                "staffnr": {
                    "description": "The personnel number of the teacher",
                    "type": "integer",
                    "example": 938503154
                },
                "starting_point": {
                    "description": "the starting point of the trip",
                    "type": "string",
                    "example": "TGM, Wexstraße 19-23, 1220 Wien"
                },
                "surname": {
                    "description": "Surname of the Teacher",
                    "type": "string",
                    "example": "Zakall"
                },
                "title": {
                    "description": "Title of the Teacher",
                    "type": "string"
                },
                "travel_costs_cited": {
                    "description": "whether the travel costs are clearly cited",
                    "type": "boolean",
                    "example": false
                },
                "travel_costs_pre_grant": {
                    "description": "The granted travel costs",
                    "type": "number",
                    "example": 0
                },
                "travel_grant": {
                    "description": "whether the teacher got a travel grant",
                    "type": "boolean",
                    "example": false
                },
                "trip_begin_time": {
                    "description": "The time the trip begins",
                    "type": "string"
                },
                "trip_end_time": {
                    "description": "The time the trip ends",
                    "type": "string"
                },
                "zi": {
                    "description": "the zi number",
                    "type": "integer"
                }
            }
        },
        "rest.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "description": "the message that should be sent",
                    "type": "string",
                    "example": "couldn't convert token'"
                }
            }
        },
        "rest.Excel": {
            "type": "object",
            "properties": {
                "excel": {
                    "description": "Content is the content of the excel file",
                    "type": "string",
                    "example": "\u003cbase64\u003e"
                }
            }
        },
        "rest.Information": {
            "type": "object",
            "properties": {
                "info": {
                    "description": "the message that should be sent",
                    "type": "string",
                    "example": "updated teacher successfully"
                }
            }
        },
        "rest.News": {
            "type": "object",
            "properties": {
                "last_changed": {
                    "description": "LastChanged is the date of last changes of the application",
                    "type": "string",
                    "example": "2009-11-10 23:00:00 +0000 UTC m=+0.000000001"
                },
                "state": {
                    "description": "State of the application",
                    "type": "integer",
                    "example": 3
                },
                "title": {
                    "description": "Title of the application",
                    "type": "string",
                    "example": "Sommersportwoche"
                },
                "uuid": {
                    "description": "UUID of the application",
                    "type": "string",
                    "example": "3fcf7f67-e0ed-4339-99b4-a6765aaa3dc4"
                }
            }
        },
        "rest.PDF": {
            "type": "object",
            "properties": {
                "pdf": {
                    "description": "Content is the content of this file",
                    "type": "string",
                    "example": "\u003cbase64\u003e"
                }
            }
        },
        "rest.Permissions": {
            "type": "object",
            "properties": {
                "administration": {
                    "description": "Administration permission",
                    "type": "boolean",
                    "example": true
                },
                "av": {
                    "description": "AV permission",
                    "type": "boolean",
                    "example": true
                },
                "pek": {
                    "description": "PEK permission",
                    "type": "boolean",
                    "example": true
                },
                "super_user": {
                    "description": "SuperUser permission",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "rest.RefreshToken": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "description": "Token is the refresh token",
                    "type": "string",
                    "example": "\u003cjwt-token\u003e"
                }
            }
        },
        "rest.TokenPair": {
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "the access token",
                    "type": "string",
                    "example": "\u003cjwt-token\u003e"
                },
                "refresh_token": {
                    "description": "the refresh token",
                    "type": "string",
                    "example": "\u003cjwt-token\u003e"
                }
            }
        },
        "rest.User": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "Password of the user",
                    "type": "string",
                    "example": "password1234"
                },
                "username": {
                    "description": "Username of the user",
                    "type": "string",
                    "example": "lehrer1234"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}